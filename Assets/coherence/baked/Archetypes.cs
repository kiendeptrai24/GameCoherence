// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
    using System.Collections.Generic;
    using Coherence.ProtocolDef;
    
    public static class Archetypes
    {
        public const int _a167402e36850884aa7ce3d374cd6c77Index = 0;

        public static readonly EntityArchetype[] Definitions =
		{
            new EntityArchetype() // _a167402e36850884aa7ce3d374cd6c77
            {
                LODs = new EntityArchetypeLOD[]
                {
                    new EntityArchetypeLOD
                    {
                        Level = 0,
                        Distance = 0,
                        ComponentReplacement = new Dictionary<uint, uint>
                        {
                            { 0, Definition.InternalArchetype_a167402e36850884aa7ce3d374cd6c77_WorldPosition_LOD0 },
                            { 1, Definition.InternalArchetype_a167402e36850884aa7ce3d374cd6c77_WorldOrientation_LOD0 },
                            { 17, Definition.InternalArchetype_a167402e36850884aa7ce3d374cd6c77_GenericScale_LOD0 },
                        },
                        ComponentsExcluded = new uint[] 
                        {
                        },
                    },
                },
            },
		};
    
        public static Dictionary<string, int> IndexForName = new Dictionary<string, int>() 
        {
            { "_a167402e36850884aa7ce3d374cd6c77", 0 },
        };
    }     
    
}
